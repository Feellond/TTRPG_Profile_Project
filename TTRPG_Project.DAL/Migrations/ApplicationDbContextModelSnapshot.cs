// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TTRPG_Project.DAL.Data;

#nullable disable

namespace TTRPG_Project.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Additional.Effect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Effects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6564),
                            Description = "",
                            Enabled = true,
                            Name = "Незаметное",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6565)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6566),
                            Description = "",
                            Enabled = true,
                            Name = "Кровопускающее",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6566)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6567),
                            Description = "",
                            Enabled = true,
                            Name = "Пробивающее броню",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6567)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6568),
                            Description = "",
                            Enabled = true,
                            Name = "Дезориентирующее(1)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6568)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6569),
                            Description = "",
                            Enabled = true,
                            Name = "Дезориентирующее(2)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6569)
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6570),
                            Description = "",
                            Enabled = true,
                            Name = "Дезориентирующее(3)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6570)
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6571),
                            Description = "",
                            Enabled = true,
                            Name = "Метеоритное",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6571)
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6572),
                            Description = "",
                            Enabled = true,
                            Name = "Длинное",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6572)
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6573),
                            Description = "",
                            Enabled = true,
                            Name = "Фокусирующее(1)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6574)
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6574),
                            Description = "",
                            Enabled = true,
                            Name = "Фокусирующее(2)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6575)
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6575),
                            Description = "",
                            Enabled = true,
                            Name = "Фокусирующее(3)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6576)
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6577),
                            Description = "",
                            Enabled = true,
                            Name = "Сокрушающая сила",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6577)
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6578),
                            Description = "",
                            Enabled = true,
                            Name = "Серебрянное",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6578)
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6579),
                            Description = "",
                            Enabled = true,
                            Name = "Сбалансированное(1)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6579)
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6581),
                            Description = "",
                            Enabled = true,
                            Name = "Сбалансированное(2)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6581)
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6582),
                            Description = "",
                            Enabled = true,
                            Name = "Сбалансированное(3)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6582)
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6583),
                            Description = "",
                            Enabled = true,
                            Name = "Улучшенное пробивание брони",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6583)
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6584),
                            Description = "",
                            Enabled = true,
                            Name = "Захватное",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6584)
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6585),
                            Description = "",
                            Enabled = true,
                            Name = "Ловящий лезвия",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6585)
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6586),
                            Description = "",
                            Enabled = true,
                            Name = "Магические путы",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6586)
                        },
                        new
                        {
                            Id = 21,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6587),
                            Description = "",
                            Enabled = true,
                            Name = "Медленно перезаряжающееся",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6587)
                        },
                        new
                        {
                            Id = 22,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6588),
                            Description = "",
                            Enabled = true,
                            Name = "Несмертельное",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6589)
                        },
                        new
                        {
                            Id = 23,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6589),
                            Description = "",
                            Enabled = true,
                            Name = "Опутывающее",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6590)
                        },
                        new
                        {
                            Id = 24,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6591),
                            Description = "",
                            Enabled = true,
                            Name = "Парирующее",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6592)
                        },
                        new
                        {
                            Id = 25,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6592),
                            Description = "",
                            Enabled = true,
                            Name = "Разрушающее",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6593)
                        },
                        new
                        {
                            Id = 26,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6593),
                            Description = "",
                            Enabled = true,
                            Name = "Рукопашное",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6594)
                        },
                        new
                        {
                            Id = 27,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6594),
                            Description = "",
                            Enabled = true,
                            Name = "Расчетная перезарядка",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6595)
                        },
                        new
                        {
                            Id = 28,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6596),
                            Description = "",
                            Enabled = true,
                            Name = "Улучшенное фокусирующее",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6596)
                        },
                        new
                        {
                            Id = 29,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6597),
                            Description = "",
                            Enabled = true,
                            Name = "Устанавливаемое",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6597)
                        },
                        new
                        {
                            Id = 30,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6598),
                            Description = "",
                            Enabled = true,
                            Name = "Шприц",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6598)
                        },
                        new
                        {
                            Id = 31,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6599),
                            Description = "",
                            Enabled = true,
                            Name = "Закрывает все тело",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6599)
                        },
                        new
                        {
                            Id = 32,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6600),
                            Description = "",
                            Enabled = true,
                            Name = "Огнеупорный",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6600)
                        },
                        new
                        {
                            Id = 33,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6601),
                            Description = "",
                            Enabled = true,
                            Name = "Ограничение зрения",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6601)
                        },
                        new
                        {
                            Id = 34,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6602),
                            Description = "",
                            Enabled = true,
                            Name = "Полное укрытие",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6602)
                        },
                        new
                        {
                            Id = 35,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6603),
                            Description = "",
                            Enabled = true,
                            Name = "Сопротивление(Д)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6603)
                        },
                        new
                        {
                            Id = 36,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6604),
                            Description = "",
                            Enabled = true,
                            Name = "Сопротивление(Р)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6605)
                        },
                        new
                        {
                            Id = 37,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6605),
                            Description = "",
                            Enabled = true,
                            Name = "Сопротивление(К)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6606)
                        },
                        new
                        {
                            Id = 38,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6606),
                            Description = "",
                            Enabled = true,
                            Name = "Сопротивление(С)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6607)
                        },
                        new
                        {
                            Id = 39,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6608),
                            Description = "",
                            Enabled = true,
                            Name = "Горение",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6609)
                        },
                        new
                        {
                            Id = 40,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6609),
                            Description = "",
                            Enabled = true,
                            Name = "Дезориентация",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6610)
                        },
                        new
                        {
                            Id = 41,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6610),
                            Description = "",
                            Enabled = true,
                            Name = "Отравление",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6611)
                        },
                        new
                        {
                            Id = 42,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6612),
                            Description = "",
                            Enabled = true,
                            Name = "Кровотечение",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6612)
                        },
                        new
                        {
                            Id = 43,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6613),
                            Description = "",
                            Enabled = true,
                            Name = "Замораживание",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6613)
                        },
                        new
                        {
                            Id = 44,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6614),
                            Description = "",
                            Enabled = true,
                            Name = "Ошеломление",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6614)
                        },
                        new
                        {
                            Id = 45,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6615),
                            Description = "",
                            Enabled = true,
                            Name = "Опьянение",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6615)
                        },
                        new
                        {
                            Id = 46,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6616),
                            Description = "",
                            Enabled = true,
                            Name = "Галлюцинации",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6616)
                        },
                        new
                        {
                            Id = 47,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6618),
                            Description = "",
                            Enabled = true,
                            Name = "Тошнота",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6618)
                        },
                        new
                        {
                            Id = 48,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6619),
                            Description = "",
                            Enabled = true,
                            Name = "Удушье",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6619)
                        },
                        new
                        {
                            Id = 49,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6620),
                            Description = "",
                            Enabled = true,
                            Name = "Слепота",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6620)
                        },
                        new
                        {
                            Id = 50,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6621),
                            Description = "",
                            Enabled = true,
                            Name = "Дистанция",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6621)
                        },
                        new
                        {
                            Id = 51,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6622),
                            Description = "",
                            Enabled = true,
                            Name = "Точность+1",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6622)
                        },
                        new
                        {
                            Id = 52,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6623),
                            Description = "",
                            Enabled = true,
                            Name = "Точность+2",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6623)
                        },
                        new
                        {
                            Id = 53,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6624),
                            Description = "",
                            Enabled = true,
                            Name = "Точность+3",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6624)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Additional.ServicePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("ServicePrices");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Additional.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6232),
                            Enabled = true,
                            Name = "Базовая книга",
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6241)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6243),
                            Enabled = true,
                            Name = "Хоумбрю",
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6243)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RaceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.HasIndex("SourceId");

                    b.ToTable("Abilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7197),
                            Description = "Благодаря обострённым чувствам ведьмаки не получают штрафов при слабом свете и получают врождённый бонус +1 к Вниманию, а также возможность выслеживания по запаху",
                            Enabled = true,
                            Name = "Обостренные чувства",
                            RaceId = 1,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7197)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7199),
                            Description = "После всех мутаций ведьмаки становятся невосприимчивы к болезням и способны использовать мутагены",
                            Enabled = true,
                            Name = "Стойкость мутанта",
                            RaceId = 1,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7200)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7201),
                            Description = "Из-за пережитых страданий и мутаций эмоции у ведьмаков притупляются. Ведьмакам не нужно совершать проверки Храбрости против Запугивания, но они получают штраф -4 к Эмпатии. При этом значение Эмпатии ведьмака не может быть ниже 1.",
                            Enabled = true,
                            Name = "Притупление эмоций",
                            RaceId = 1,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7201)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7202),
                            Description = "Благодаря интенсивным тренировкам и мутациям ведьмаки куда быстрее и проворнее обычных людей. Они получают постоянный бонус +1 к Реакции и Ловкости, позволяющий сделать эти значения больше 10.",
                            Enabled = true,
                            Name = "Молниеносная реакция",
                            RaceId = 1,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7203)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7204),
                            Description = "У эльфов есть врождённая творческая жилка и развитое чувство прекрасного. Эльфы получают врождённый бонус +1 к Искусству.",
                            Enabled = true,
                            Name = "Чувство прекрасного",
                            RaceId = 2,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7204)
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7205),
                            Description = "Благодаря давним традициям и постоянным тренировкам эльфы — одни из лучших лучников в мире. Эльфы получают врождённый бонус +2 к Стрельбе из лука и способны выхватывать и натягивать лук, не тратя на это действие.",
                            Enabled = true,
                            Name = "Стрелок",
                            RaceId = 2,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7206)
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7207),
                            Description = "Эльфы тесно связаны с природой. Они не тревожат животных — любой зверь, встреченный эльфом, будет относиться к нему дружелюбно и не нападёт без провокации. Эльфы также способны автоматически находить любые обычные и повсеместные субстанции растительного происхождения, если искомые растения обитают в природе на данной территории",
                            Enabled = true,
                            Name = "Единение с природой",
                            RaceId = 2,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7207)
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7208),
                            Description = "У краснолюдов весьма крепкая кожа, имеющая врождённую прочность 2. Данная величина прибавляется к прочности любой брони и не может быть понижена разрушающим уроном.",
                            Enabled = true,
                            Name = "Закаленный",
                            RaceId = 3,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7209)
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7210),
                            Description = "Благодаря невысокому росту и склонности к тяжелой работе, требующей физических усилий, краснолюды получают +1 к Силе и повышают свое значение Переносимого веса на 25.",
                            Enabled = true,
                            Name = "Силач",
                            RaceId = 3,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7210)
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7211),
                            Description = "Краснолюды - прекрасные оценщики, обладающие вниманием к деталям, а потому обмануть их весьма трудно. Краснолюды получают врожденный бонус +1 к Торговле.",
                            Enabled = true,
                            Name = "Наметанный глаз",
                            RaceId = 3,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7212)
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7213),
                            Description = "В мире, где нелюдям не доверяют, людям довериться куда проще. У людей есть врожденный бонус +1 к проверкам Харизмы, Соблазнения и Убеждения против других людей.",
                            Enabled = true,
                            Name = "Доверие",
                            RaceId = 4,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7214)
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7215),
                            Description = "Люди умны и зачастую находят великолепные решения сложных проблем. Люди получают врожденный бонус +1 к Дедукции.",
                            Enabled = true,
                            Name = "Изобретательность",
                            RaceId = 4,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7215)
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7216),
                            Description = "Одно из величайших преимуществ человеческой расы — нежелание отступать даже в опасной ситуации. Они могут собраться с духом и перебросить неудачный результат проверки Сопротивления убеждению или Храбрости, но не более 3 раз за игровую партию. В таком случае из двух результатов выбирают наивысший, но если результат всё равно провальный, то вновь использовать Упрямство нельзя.",
                            Enabled = true,
                            Name = "Упрямство",
                            RaceId = 4,
                            SourceId = 1,
                            Type = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7217)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Attack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttackSpeed")
                        .HasColumnType("int");

                    b.Property<int>("AttackType")
                        .HasColumnType("int");

                    b.Property<int>("BaseAttack")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reliability")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Attacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttackSpeed = 1,
                            AttackType = 4,
                            BaseAttack = 12,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7260),
                            Damage = "2к6+2",
                            Description = "",
                            Distance = 0,
                            Enabled = true,
                            Name = "Железный полуторный меч",
                            Reliability = 10,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7260)
                        },
                        new
                        {
                            Id = 2,
                            AttackSpeed = 1,
                            AttackType = 4,
                            BaseAttack = 11,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7265),
                            Damage = "1к6",
                            Description = "",
                            Distance = 0,
                            Enabled = true,
                            Name = "Кинжал",
                            Reliability = 10,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7265)
                        },
                        new
                        {
                            Id = 3,
                            AttackSpeed = 1,
                            AttackType = 1,
                            BaseAttack = 10,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7267),
                            Damage = "2к6+2",
                            Description = "",
                            Distance = 0,
                            Enabled = true,
                            Name = "Ручной арбалет",
                            Reliability = 10,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7268)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.AttackEffectList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttackId")
                        .HasColumnType("int");

                    b.Property<int>("ChancePercent")
                        .HasColumnType("int");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EffectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDealDamage")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AttackId");

                    b.HasIndex("EffectId");

                    b.ToTable("AttackEffectList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChancePercent = 0,
                            Damage = "50м",
                            EffectId = 50,
                            IsDealDamage = false
                        },
                        new
                        {
                            Id = 2,
                            ChancePercent = 0,
                            Damage = "",
                            EffectId = 21,
                            IsDealDamage = false
                        },
                        new
                        {
                            Id = 3,
                            ChancePercent = 0,
                            Damage = "",
                            EffectId = 51,
                            IsDealDamage = false
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultMagicAbilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SkillsTreeId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SkillsTreeId");

                    b.HasIndex("SourceId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7250),
                            DefaultMagicAbilities = "",
                            Description = "Я ведь уже говорил тебе, что странствовал какое-то время с ведьмаком? Так вот. Спросил я его как-то, почему он ведьмаком остался. Это ведь явно не работа мечты — входишь в деревню, дети прячутся, отцы своих дочурок по домам запирают. Впрочем, ответ был ожидаем — он попросту незнал другой жизни. На самом деле логично. Вот живёшь ты, живёшь, занимаешься одним делом, а больше-то ничего и не умеешь. Но не всё так плохо. Ведьмаки — это сила. Мечники они отменные — тот ведьмак, с которым я странствовал, как-то раз арбалетный болт отбил на лету. Могу повторить, если тебя это не впечатлило. Своим кручением-верчением они вполне способны в капусту покрошить более медленных мечников. Двигаются ведьмаки так быстро, что со стороны за мечом не уследишь и каждый взмах превращается в серебряную полосу. И не стоит забывать об алхимии! Раньше они точно с собой таскали всякие эликсиры и масла, благодаря которым на поле боя превращались в сущих дьяволов — становились быстрее и раны залечивали, как волколаки. Вдобавок ко всему ведьмаки чуточку магией владеют. Ну, не такой мощной, как настоящие чародеи, но всё же заклинания свои творят. Называется это знаками. Это такие пассы руками, обладающие магическим действием. Любой маг на это лишь пофыркает, поскольку такие вещи не дотягивают даже до простейших заклинаний, но всёравно знаки весьма эффективны. Так что честно тебе скажу: я рад, что ведьмаки только на чудовищ охотятся. Ну... по крайней мере, когда-то так было.",
                            Enabled = true,
                            Energy = 2,
                            Name = "Ведьмак",
                            SkillsTreeId = 1,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7250)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Creature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("AthleticsBase")
                        .HasColumnType("int");

                    b.Property<int>("BlockBase")
                        .HasColumnType("int");

                    b.Property<int>("Complexity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EducationSkill")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("EvasionBase")
                        .HasColumnType("int");

                    b.Property<string>("GroupSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HabitatPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Intellect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MoneyReward")
                        .HasColumnType("int");

                    b.Property<string>("MonsterLoreInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonsterLoreSkill")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("Regeneration")
                        .HasColumnType("int");

                    b.Property<int?>("SkillsListId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("SpellResistBase")
                        .HasColumnType("int");

                    b.Property<int?>("StatsListId")
                        .HasColumnType("int");

                    b.Property<string>("SuperstitionsInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.HasIndex("SkillsListId");

                    b.HasIndex("SourceId");

                    b.HasIndex("StatsListId");

                    b.ToTable("Creatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalInformation = "",
                            Armor = 5,
                            AthleticsBase = 9,
                            BlockBase = 12,
                            Complexity = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7390),
                            Description = "",
                            EducationSkill = 8,
                            Enabled = true,
                            EvasionBase = 10,
                            GroupSize = "Банда из 3-15 разбойников",
                            HabitatPlace = "Часто рядом с городами и на трактах",
                            Height = 180,
                            Intellect = "Человеческий",
                            MoneyReward = 10,
                            MonsterLoreInformation = "Разбойники — одна из самых распространённых угроз на дороге, но отнюдь не самая опасная. Куда тяжелее скинуть с себя гуля, чем расправиться с парочкой разбойников. Но порой они могут представлять настоящую угрозу, особенно когда их много. Большая часть разбойников — это солдаты без армии, наёмники без контракта или дезертиры, которые покинули одну из воюющих сторон. Разбойники просты. Первые ряды побегут с полуторными мечами наголо. Те, кто на такое не способен, воспользуются арбалетами. Разбойникам обычно нужны три вещи: безопасность, деньги и что-нибудь, на чём можно выместить свой гнев. С ними не то чтобы просто расправиться, но, в отличие от большинства чудовищ, можно воззвать к их разуму. Возможно, вы сумеете убедить их не убивать вас. Разбойники, скорее всего, сдадутся, если вы нанесёте им достаточно урона.\r\nОднако некоторые разбойники, странствующие крепко сбитыми группами, могут начать сражаться яростнее, если убить их товарищей. На истерзанном войной Севере стоит быть осторожнее: нехватка пищи заставила некоторых разбойников стать каннибалами. Каннибалы зачастую сходят с ума и нападают с бешеной яростью — они не сдаются, даже стоя одной ногой в могиле. Если не хотите драться, будьте внимательны на дороге. =",
                            MonsterLoreSkill = 10,
                            Name = "Разбойник",
                            RaceId = 4,
                            Regeneration = 0,
                            SkillsListId = 1,
                            SourceId = 1,
                            SpellResistBase = 8,
                            StatsListId = 1,
                            SuperstitionsInformation = "Хе, разбойники, дезертиры, ренегаты, сукины дети... Называй их как хочешь. Люди ступают на преступный путь ради денег и власти, но в большинстве своём они делают это от страха и голода. Все знают, что уровень преступности растёт во время войны. Так было в прошлых двух войнах, и вот сейчас опять. Но это не значит, что простой народ с этим согласен. Хех, не говорите это в лицо убийце, но среднестатистический ублюдок о бандите того же мнения, что и о гуле. И те, и другие прячутся по грязным закоулкам мира, ждут момента, чтобы напасть, и устраивают засаду на добрых трудяг, чтобы отобрать заработанное кровью и потом.",
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7391),
                            Weight = 80f
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.CreatureAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AbilityId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("CreatureId");

                    b.ToTable("CreatureAbility");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.CreatureAttack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttackId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackId");

                    b.HasIndex("CreatureId");

                    b.ToTable("CreatureAttacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttackId = 1,
                            CreatureId = 1
                        },
                        new
                        {
                            Id = 2,
                            AttackId = 2,
                            CreatureId = 1
                        },
                        new
                        {
                            Id = 3,
                            AttackId = 3,
                            CreatureId = 1
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.CreatureReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatureId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemBaseId")
                        .HasColumnType("int");

                    b.Property<int?>("RewardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatureId");

                    b.HasIndex("ItemBaseId");

                    b.HasIndex("RewardId");

                    b.ToTable("CreatureRewardList");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7171),
                            Description = "Ведьмаки — тема деликатная с тех самых пор, как их создали много веков тому назад. Но, знаешь, даже когда они были нарасхват, их не особо-то любили. Ведьмаков выращивали из людских детей в пяти ведьмачьих школах. Там дети проходили какую-то лютую подготовку, после которой становились живым оружием. Быстрые до одури, могут сражаться вслепую и обучены охотиться считай на всех тварей, каких только можно встретить. Через парулет тренировок их подвергают мутациям — известней всего так называемое Испытание травами. Ведьмак, с которым мне довелось странствовать, рассказал, что переживает эту дрянь только один дитёнок из четырёх. Те, кто выжил, меняются. Глаза у них становятся кошачьими, а эмоции напрочь отмирают. Вроде как последнее со временем налаживается — например, тот самый знакомый мне ведьмак по дороге шутки-то малясь травил. Но с того самого момента, как ведьмаки мутируют, они становятся убийцами. Они перерождаются ради единственной цели — убивать чудовищ. И если доведётся тебе повидать ведьмака в деле, то поймёшь, что все те пройденные страдания были не зря. Одна только проблема: они мутанты, а люди мутантов ненавидят. С адаптацией в обществе у ведьмаков плохо, и для большинства они — хладнокровные бессердечные выродки, что честным людям кишки выпускают, предварительно ограбив да их дочек снасильничав",
                            Enabled = true,
                            Name = "Ведьмаки",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7171)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7172),
                            Description = "История эльфов (точнее Aen Seidhe, поскольку наши эльфы далеко не единственные) весьма грустная. Они прибыли сюда неизвестно откуда на огромных белых кораблях. Случилось это незадолго до появления людей. Я бы не назвал эльфов добряками, но с остальными они как-то уживались. От людей они не сильно отличаются: высокие, худые, любят на другие народы свысока смотреть. Разве что уши острые, жизнь вечная, да, считай, полное единение с природой — эльфы много поколений только и делали, что занимались собирательством и строили дворцы. Унихза время поеданияягод да кореньев и клыков-то не осталось. Правда, всё равно не советую их из себя выводить — на поле боя эльфы могут устроить тот ещё ад. Броню они толком не носят, но заприметить эльфа в лесу также тяжело, как зимой лягушку найти. А уж искуснее лучника чем эльф, днём с огнём не сыщешь.",
                            Enabled = true,
                            Name = "Эльфы (Aen Seidhe)",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7172)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7173),
                            Description = "Друже, вот что я тебе скажу: реки высохнут, горы рассыплются, а краснолюды никуда не денутся. Может, мы и низенькие в сравнении с эльфами и людьми, да только в силе и закалке им с нами не тягаться. Мы — само воплощение стойкости! Краснолюды уже не первый век существуют в этом мире. Жили себе спокойно в горах, ковали. Мы народ достаточно дружелюбный, если познакомиться с нами поближе. Да и уживаемся спокойно со всеми... если нас не бесить, конечно. Человечишки нас не особо любят, но мы им нужны — кто ж сталь им ковать будет и торговать? К тому же, в отличие от сраных эльфов, мы не держим на людей зла. Нас не трогают — и мы их не трогаем в ответ. Порой даже кружечку-другую готовы раздавить вместе с человеком. Жаль, конечно, что вся эта безумная расистская дрянь по Северу расползлась. Теперь и на краснолюдов травлю открыли. Повезло ещё, что люди наших девок нормально от мужиков отличить не могут, а то бы всех уже увели! Ведь нету бабы краше нраснолюдки. Правильно говорят: чем пышнее борода, тем приятнее... ну, ты понимаешь.",
                            Enabled = true,
                            Name = "Краснолюды",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7173)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7174),
                            Description = "Ох, будь я покозлистее, то всю желчь излил бы тебе о том, как людишки насолили моему народу и остальным Старшим Народам. Но я не такой. С людьми я служил бок о бок на войне с Нильфгаардом; в той же темерской армии большинство — люди. Не все они говнюки — бывают и хорошие. По характеру люди-mo разные. Обычно они весьма стойкие ребята. Разве что частенько начинают то за «правое дело» воевать, то тыкать пальцами и бояться. Сейчас люди на Континенте — преобладающий вид, и они об этом прекрасно знают... чёрт, даже не надо стараться, чтобы о них гадости говорить. Люди почти уничтожили Старшие Народы, выкосили вранов, оставили в живых всего пару сотен боболаков, построили свои города на руинах Старших Народов и каждый день кого-то из Старших убивают. Но нет, они не все говнюки. Да, большинство магов — люди, и именно они погрузили мир в хаос, но они также сделали мир лучше с помощью науки и магии. Люди умные и, на самом деле, верные — если ты с человеком дружен, он тебя в беде не бросит.",
                            Enabled = true,
                            Name = "Люди",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7175)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7176),
                            Description = "Формально гуманоиды чудовищами не являются. Это люди, эльфы, краснолюды и прочие представители Старших Народов. Гуманоиды разнообразны в плане поведения и мест обитания. Важно помнить, что даже\r\nпо стандартным правилам гуманоиды не имеют восприимчивости к серебру и сопротивления стали.",
                            Enabled = true,
                            Name = "Гуманоиды",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7176)
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7177),
                            Description = "Трупоеды едят трупы, и зачастую их можно встретить на кладбищах, полях боя и в глубоких пещерах. Их отталкивающая внешность обманчива — это вполне живые существа с иных планов. Менее разумные трупоеды, такие как гули, нападают на всё, что оказывается поблизости. Умные трупоеды, вроде кладбищенских баб, бродят по кладбищам и заманивают селян.",
                            Enabled = true,
                            Name = "Трупоеды",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7177)
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7178),
                            Description = "Духи представляют собой сильные желания усопших. Обычно они появляются тогда, когда кого-то убивают или когда кто-то перед смертью испытывает интенсивные эмоции. Многие духи разумны, но все они целиком захвачены каким-то одним чувством — обычно яростью, — что просто не позволяет вести с ними диалог.",
                            Enabled = true,
                            Name = "Духи",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7178)
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7179),
                            Description = "Звери, как и гуманоиды, формально не относятся к чудовищам. В этой категории — собаки, волки и тому подобные существа. Они не имеют восприимчивости к серебру и сопротивления стали. Встретить их и вблизи поселений. Охотятся они преимущественно на селян и скот.",
                            Enabled = true,
                            Name = "Звери",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7180)
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7181),
                            Description = "Проклятые — это люди и нелюди, на которых было наложено проклятие, превратившее их в чудовиш. Наиболее распространены волколаки. Поскольку это проклятые люди они обычно живут в человеческих поселениях. В большинстве своём такие существа открыто агрессивны по отношению к людям.",
                            Enabled = true,
                            Name = "Проклятые",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7181)
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7182),
                            Description = "Этот класс объединяет множество разных химер вроде сирен и грифонов — соединение частей разных животных. Гибриды необычайно разнообразны и предпочитают различные среды обитания. Те, у кого есть способность к полёту, живут на возвышенностях, хотя в целом гибридов можно найти повсемест но, в самых разных зонах.",
                            Enabled = true,
                            Name = "Гибриды",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7182)
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7183),
                            Description = "Инсектоиды — это огромные насекомые и арахниды, которые бродят за пределами поселений, подстерегая неосторожных путников. Инсектоиды — хищники, обычно нападающие из засады и ранящие своих жертв ядовитыми жвалами или когтями. Если подобратьсслишком близко к гнезду инсектоидов, то вскоре вас может окружить целый рой этих существ.",
                            Enabled = true,
                            Name = "Инсектоиды",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7184)
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7185),
                            Description = "Духи стихий - восхитительные создания магии: големы, элементали, гаргульи и им подобные. Большинство таких существ призваны магами и жрецами. Они следуют приказам призвавшего, у них практически нет своей воли. Но если призвать их в этот мир, не связав узами, духистихий становятся ужасающей силой, способной уничтожать города.",
                            Enabled = true,
                            Name = "Духи стихий",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7185)
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7186),
                            Description = "Реликты — силы природы, периодически проявляющиеся за пределами поселений. Скорее всего, эти чудовища прибыли в наш мир во время Сопряжения Сфер. Все они владеют магиейи тесно связаны с природой. По разумности реликты различаются: от умных и хитрых до примитивных и жестоких.",
                            Enabled = true,
                            Name = "Реликты",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7186)
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7187),
                            Description = "Огры, включая троллей, накеров и великанов, — это гуманоидные создания, зачастую с почти человеческим интеллектом. Большинство из них велики и нескладны (за исключением накеров). Они не только способны создавать племенные сообщества, но и, в случае троллей, кое-как разговаривать на человеческом языке и Старшей Речи.",
                            Enabled = true,
                            Name = "Огры",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7187)
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7188),
                            Description = "Среди драконидов есть такие существа, как виверны и драконы. Большинство драконидов — это крупные крылатые ящеры, крайне опасные (особенно в ближнем бою), но дикие. Истинные драконы по интеллекту близки к людям, а то и вовсе их превосходят и обладают куда большим количеством способностей. Логова драконидов расположены высоко в горах.",
                            Enabled = true,
                            Name = "Дракониды",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7189)
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7189),
                            Description = "Вампиры — весьма разнообразная группа кровососущих чудовищ. Обычно они охотятся в руинах, хотя могущественные вампиры могут процветать и в городах. Низшие вампиры — это неразумные твари, раздирающие тела на части и затем выпивающие кровь. Высшие вампиры способны без проблем влиться в человеческое общество и обладают огромной силой.",
                            Enabled = true,
                            Name = "Вампиры",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7190)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemBaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemBaseId");

                    b.ToTable("Reward");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = "3к10",
                            ItemBaseId = 90
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClassSkill")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDifficult")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("StatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("StatId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6439),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Внимание",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6439)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6440),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Выживание в дикой природе",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6441)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6442),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Дедукция",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6442)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6443),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Монстрология",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6444)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6445),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Образование",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6445)
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6446),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Ориентирование в городе",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6447)
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6448),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Передача знаний",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6448)
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6449),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Тактика",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6449)
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6450),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Торговля",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6451)
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6453),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Этикет",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6454)
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6455),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Язык всеобщий",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6455)
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6456),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Язык Старшей Речи",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6456)
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6458),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Язык краснолюдов",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6458)
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6459),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Ближний бой",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6459)
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6460),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Борьба",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6461)
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6463),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Верховая езда",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6463)
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6464),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Владение древковым оружием",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6464)
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6466),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Владение легкими клинками",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6466)
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6468),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Владение мечом",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6468)
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6469),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Мореходство",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6469)
                        },
                        new
                        {
                            Id = 21,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6471),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Уклонение/Изворотливость",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6471)
                        },
                        new
                        {
                            Id = 22,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6472),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Атлетика",
                            SourceId = 1,
                            StatId = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6472)
                        },
                        new
                        {
                            Id = 23,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6473),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Ловкость рук",
                            SourceId = 1,
                            StatId = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6474)
                        },
                        new
                        {
                            Id = 24,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6475),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Скрытность",
                            SourceId = 1,
                            StatId = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6475)
                        },
                        new
                        {
                            Id = 25,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6476),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Стрельба из арбалета",
                            SourceId = 1,
                            StatId = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6477)
                        },
                        new
                        {
                            Id = 26,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6478),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Стрельба из лука",
                            SourceId = 1,
                            StatId = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6478)
                        },
                        new
                        {
                            Id = 27,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6479),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Сила",
                            SourceId = 1,
                            StatId = 4,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6479)
                        },
                        new
                        {
                            Id = 28,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6481),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Стойкость",
                            SourceId = 1,
                            StatId = 4,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6481)
                        },
                        new
                        {
                            Id = 29,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6482),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Азартные игры",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6482)
                        },
                        new
                        {
                            Id = 30,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6483),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Внешний вид",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6484)
                        },
                        new
                        {
                            Id = 31,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6485),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Выступление",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6485)
                        },
                        new
                        {
                            Id = 32,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6487),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Искусство",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6487)
                        },
                        new
                        {
                            Id = 33,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6489),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Лидерство",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6489)
                        },
                        new
                        {
                            Id = 34,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6490),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Обман",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6490)
                        },
                        new
                        {
                            Id = 35,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6491),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Понимание людей",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6492)
                        },
                        new
                        {
                            Id = 36,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6493),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Соблазнение",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6493)
                        },
                        new
                        {
                            Id = 37,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6494),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Убеждение",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6494)
                        },
                        new
                        {
                            Id = 38,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6496),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Харизма",
                            SourceId = 1,
                            StatId = 6,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6496)
                        },
                        new
                        {
                            Id = 39,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6497),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Алхимия",
                            SourceId = 1,
                            StatId = 7,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6497)
                        },
                        new
                        {
                            Id = 40,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6498),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Взлом замков",
                            SourceId = 1,
                            StatId = 7,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6499)
                        },
                        new
                        {
                            Id = 41,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6500),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Знание ловушек",
                            SourceId = 1,
                            StatId = 7,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6500)
                        },
                        new
                        {
                            Id = 42,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6502),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Изготовление",
                            SourceId = 1,
                            StatId = 7,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6502)
                        },
                        new
                        {
                            Id = 43,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6503),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Маскировка",
                            SourceId = 1,
                            StatId = 7,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6503)
                        },
                        new
                        {
                            Id = 44,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6504),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Первая помощь",
                            SourceId = 1,
                            StatId = 7,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6505)
                        },
                        new
                        {
                            Id = 45,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6506),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Подделывание",
                            SourceId = 1,
                            StatId = 7,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6506)
                        },
                        new
                        {
                            Id = 46,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6507),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Запугивание",
                            SourceId = 1,
                            StatId = 8,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6507)
                        },
                        new
                        {
                            Id = 47,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6509),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Наведение порчи",
                            SourceId = 1,
                            StatId = 8,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6509)
                        },
                        new
                        {
                            Id = 48,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6511),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Проведение ритуалов",
                            SourceId = 1,
                            StatId = 8,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6511)
                        },
                        new
                        {
                            Id = 49,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6512),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Сопротивление магии",
                            SourceId = 1,
                            StatId = 8,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6512)
                        },
                        new
                        {
                            Id = 50,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6514),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Сопротивление убеждению",
                            SourceId = 1,
                            StatId = 8,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6514)
                        },
                        new
                        {
                            Id = 51,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6515),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = true,
                            Name = "Сотворение заклинаний",
                            SourceId = 1,
                            StatId = 8,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6515)
                        },
                        new
                        {
                            Id = 52,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6516),
                            Description = "",
                            Enabled = true,
                            IsClassSkill = false,
                            IsDifficult = false,
                            Name = "Храбрость",
                            SourceId = 1,
                            StatId = 8,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6517)
                        },
                        new
                        {
                            Id = 53,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6518),
                            Description = "Большинство ведьмаков проводят детство и юность в крепости, корпя над пыльными томами и проходя чудовищные боевые тренировки. Многие говорят, что главное оружие ведьмака — это знания о чудовищах и умение найти выход из любой ситуации. Находясь в опасной среде или на пересечённой местности, ведьмак может снизить соответствующие штрафы на половину значения своего навыка Подготовка ведьмака (минимум 1). Подготовку ведьмака также можно использовать в любой ситуации, где понадобился бы навык Монстрология.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Подготовка ведьмака",
                            SourceId = 1,
                            StatId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6518)
                        },
                        new
                        {
                            Id = 54,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6519),
                            Description = "Ведьмак может войти в медитативный транс, что позволяет ему получить все преимущества сна, но при этом сохранять бдительность. Во время медитации ведьмак считается находящимся в сознании для того, чтобы заметить что-либо в радиусе в метрах, равном удвоенному значению его Медитации.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Магический клинок",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6520)
                        },
                        new
                        {
                            Id = 55,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6521),
                            Description = "По мере того как ведьмак всё больше использует знаки, его тело постепенно привыкает к течению магической энергии. Каждые 2 очка, вложенные в способность Магический источник, повышают значение Энергии ведьмака на 1. Когда эта способность достигает 10 уровня, максимальное значение Энергии ведьмака становится равно 7. Эта способность развивается аналогично прочим навыкам.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Магический источник",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6521)
                        },
                        new
                        {
                            Id = 56,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6522),
                            Description = "Когда ведьмак становится целью заклинания, инвокации или порчи, он может совершить проверку способности Гелиотроп, чтобы попытаться отменить эффект. Он должен выкинуть результат, который больше либо равен результату его противника, а также потратить количество Выносливости, равное половине Выносливости, затраченной на сотворение магии.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Гелиотроп",
                            SourceId = 1,
                            StatId = 8,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6522)
                        },
                        new
                        {
                            Id = 57,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6524),
                            Description = "а годы употребления ядовитых ведьмачьих эликсиров ведьмаки привыкают к токсинам. Ведьмак может выдержать отвары и эликсиры суммарной токсичностью на 5% больше за каждые 2 очка, вложенные в способность Крепкий желудок. Эта способность развивается аналогично прочим навыкам. На 10 уровне максимальная токсичность для ведьмака равна 150%.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Крепкий желудок",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6524)
                        },
                        new
                        {
                            Id = 58,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6525),
                            Description = "Будучи отравленным, ведьмак впадает в ярость и наносит дополнительно 1 урон в ближнем бою за каждый уровень Ярости. В этом состоянии единственная цель ведьмака — добраться до безопасного места или убить отравителя. Действие Ярости заканчивается одновременно с действием яда. Ведьмак может попытаться избавиться от Ярости раньше, совершив проверку Стойкости со СЛ 15.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Ярость",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6525)
                        },
                        new
                        {
                            Id = 59,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6526),
                            Description = "Принимая отвар, ведьмак может совершить проверку Трансмутации со СЛ 18. При успехе тело ведьмака принимает в себя несколько больше мутагена, чем обычно, что позволяет получить бонус в зависимости от принятого отвара (см. таблицу на полях). Длительность действия отвара уменьшается вдвое. Дополнительные мутации слишком малы, чтобы их заметить.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Трансмутация",
                            SourceId = 1,
                            StatId = 4,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6527)
                        },
                        new
                        {
                            Id = 60,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6528),
                            Description = "Ведьмак может совершить проверку этой способности со штрафом -3, чтобы отбить летящий физический снаряд. При отбивании ведьмак может выбрать цель в пределах 10 м. Эта цель должна совершить действие защиты против броска Отбивания стрел ведьмака, или она будет ошеломлена из-за попадания отбитого снаряда.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Отбивание стрел",
                            SourceId = 1,
                            StatId = 3,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6528)
                        },
                        new
                        {
                            Id = 61,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6530),
                            Description = "Закончив свой ход, ведьмак может потратить 5 очков Вын и совершить проверку Быстрого удара со СЛ, равной Реа противника хЗ. При успехе ведьмак совершает ещё одну атаку в этот раунд против этого противника, которая может включать в себя разоружение, подсечку и прочие атаки.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Быстрый удар",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6530)
                        },
                        new
                        {
                            Id = 62,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6533),
                            Description = "Потратив 5 очков Вын за раунд, ведьмак может закрутиться в Вихре, совершая каждый ход по одной атаке против всех, кто находится в пределах дистанции его меча. Проверка Вихрясчитается проверкой атаки. Находясь в Вихре, ведьмак может только поддерживать его, уклоняться и передвигаться на 2 метра за раунд. Любое другое действие или полученный удар прекращают Вихрь.",
                            Enabled = true,
                            IsClassSkill = true,
                            IsDifficult = false,
                            Name = "Вихрь",
                            SourceId = 1,
                            StatId = 2,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6533)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.SkillsList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlchemyId")
                        .HasColumnType("int");

                    b.Property<int?>("AlchemyValue")
                        .HasColumnType("int");

                    b.Property<int?>("AppearanceId")
                        .HasColumnType("int");

                    b.Property<int?>("AppearanceValue")
                        .HasColumnType("int");

                    b.Property<int?>("ArcheryId")
                        .HasColumnType("int");

                    b.Property<int?>("ArcheryValue")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistryId")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistryValue")
                        .HasColumnType("int");

                    b.Property<int?>("AthleticsId")
                        .HasColumnType("int");

                    b.Property<int?>("AthleticsValue")
                        .HasColumnType("int");

                    b.Property<int?>("AttentionId")
                        .HasColumnType("int");

                    b.Property<int?>("AttentionValue")
                        .HasColumnType("int");

                    b.Property<int?>("CamouflageId")
                        .HasColumnType("int");

                    b.Property<int?>("CamouflageValue")
                        .HasColumnType("int");

                    b.Property<int?>("CharismaId")
                        .HasColumnType("int");

                    b.Property<int?>("CharismaValue")
                        .HasColumnType("int");

                    b.Property<int?>("CityOrientationId")
                        .HasColumnType("int");

                    b.Property<int?>("CityOrientationValue")
                        .HasColumnType("int");

                    b.Property<int?>("CorruptionId")
                        .HasColumnType("int");

                    b.Property<int?>("CorruptionValue")
                        .HasColumnType("int");

                    b.Property<int?>("CourageId")
                        .HasColumnType("int");

                    b.Property<int?>("CourageValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CrossbowMasteryId")
                        .HasColumnType("int");

                    b.Property<int?>("CrossbowMasteryValue")
                        .HasColumnType("int");

                    b.Property<int?>("DeceptionId")
                        .HasColumnType("int");

                    b.Property<int?>("DeceptionValue")
                        .HasColumnType("int");

                    b.Property<int?>("DeductionId")
                        .HasColumnType("int");

                    b.Property<int?>("DeductionValue")
                        .HasColumnType("int");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationValue")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int?>("EnduranceId")
                        .HasColumnType("int");

                    b.Property<int?>("EnduranceValue")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetteId")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetteValue")
                        .HasColumnType("int");

                    b.Property<int?>("EvasionId")
                        .HasColumnType("int");

                    b.Property<int?>("EvasionValue")
                        .HasColumnType("int");

                    b.Property<int?>("FirstAidId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstAidValue")
                        .HasColumnType("int");

                    b.Property<int?>("ForgeryId")
                        .HasColumnType("int");

                    b.Property<int?>("ForgeryValue")
                        .HasColumnType("int");

                    b.Property<int?>("GamblingId")
                        .HasColumnType("int");

                    b.Property<int?>("GamblingValue")
                        .HasColumnType("int");

                    b.Property<int?>("IntimidationId")
                        .HasColumnType("int");

                    b.Property<int?>("IntimidationValue")
                        .HasColumnType("int");

                    b.Property<int?>("KnowledgeTransferId")
                        .HasColumnType("int");

                    b.Property<int?>("KnowledgeTransferValue")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageDwarfId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageDwarfValue")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageGeneralId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageGeneralValue")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageHighId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageHighValue")
                        .HasColumnType("int");

                    b.Property<int?>("LeadershipId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadershipValue")
                        .HasColumnType("int");

                    b.Property<int?>("LightBladeMasteryId")
                        .HasColumnType("int");

                    b.Property<int?>("LightBladeMasteryValue")
                        .HasColumnType("int");

                    b.Property<int?>("LockpickingId")
                        .HasColumnType("int");

                    b.Property<int?>("LockpickingValue")
                        .HasColumnType("int");

                    b.Property<int?>("MagicResistanceId")
                        .HasColumnType("int");

                    b.Property<int?>("MagicResistanceValue")
                        .HasColumnType("int");

                    b.Property<int?>("ManualDexterityId")
                        .HasColumnType("int");

                    b.Property<int?>("ManualDexterityValue")
                        .HasColumnType("int");

                    b.Property<int?>("ManufacturingId")
                        .HasColumnType("int");

                    b.Property<int?>("ManufacturingValue")
                        .HasColumnType("int");

                    b.Property<int?>("MeleeCombatId")
                        .HasColumnType("int");

                    b.Property<int?>("MeleeCombatValue")
                        .HasColumnType("int");

                    b.Property<int?>("MonsterologyId")
                        .HasColumnType("int");

                    b.Property<int?>("MonsterologyValue")
                        .HasColumnType("int");

                    b.Property<int?>("PersuasionId")
                        .HasColumnType("int");

                    b.Property<int?>("PersuasionResistanceId")
                        .HasColumnType("int");

                    b.Property<int?>("PersuasionResistanceValue")
                        .HasColumnType("int");

                    b.Property<int?>("PersuasionValue")
                        .HasColumnType("int");

                    b.Property<int?>("PoleWeaponMasteryId")
                        .HasColumnType("int");

                    b.Property<int?>("PoleWeaponMasteryValue")
                        .HasColumnType("int");

                    b.Property<int?>("PublicSpeakingId")
                        .HasColumnType("int");

                    b.Property<int?>("PublicSpeakingValue")
                        .HasColumnType("int");

                    b.Property<int?>("RidingId")
                        .HasColumnType("int");

                    b.Property<int?>("RidingValue")
                        .HasColumnType("int");

                    b.Property<int?>("RitualsId")
                        .HasColumnType("int");

                    b.Property<int?>("RitualsValue")
                        .HasColumnType("int");

                    b.Property<int?>("SeamanshipId")
                        .HasColumnType("int");

                    b.Property<int?>("SeamanshipValue")
                        .HasColumnType("int");

                    b.Property<int?>("SeductionId")
                        .HasColumnType("int");

                    b.Property<int?>("SeductionValue")
                        .HasColumnType("int");

                    b.Property<int?>("SpellcastingId")
                        .HasColumnType("int");

                    b.Property<int?>("SpellcastingValue")
                        .HasColumnType("int");

                    b.Property<int?>("StealthId")
                        .HasColumnType("int");

                    b.Property<int?>("StealthValue")
                        .HasColumnType("int");

                    b.Property<int?>("StrengthId")
                        .HasColumnType("int");

                    b.Property<int?>("StrengthValue")
                        .HasColumnType("int");

                    b.Property<int?>("SurvivalId")
                        .HasColumnType("int");

                    b.Property<int?>("SurvivalValue")
                        .HasColumnType("int");

                    b.Property<int?>("SwordsmanshipId")
                        .HasColumnType("int");

                    b.Property<int?>("SwordsmanshipValue")
                        .HasColumnType("int");

                    b.Property<int?>("TacticsId")
                        .HasColumnType("int");

                    b.Property<int?>("TacticsValue")
                        .HasColumnType("int");

                    b.Property<int?>("TradingId")
                        .HasColumnType("int");

                    b.Property<int?>("TradingValue")
                        .HasColumnType("int");

                    b.Property<int?>("TrapKnowledgeId")
                        .HasColumnType("int");

                    b.Property<int?>("TrapKnowledgeValue")
                        .HasColumnType("int");

                    b.Property<int?>("UnderstandingPeopleId")
                        .HasColumnType("int");

                    b.Property<int?>("UnderstandingPeopleValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WrestlingId")
                        .HasColumnType("int");

                    b.Property<int?>("WrestlingValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SkillsList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlchemyId = 39,
                            AlchemyValue = 0,
                            AppearanceId = 30,
                            AppearanceValue = 0,
                            ArcheryId = 26,
                            ArcheryValue = 0,
                            ArtistryId = 32,
                            ArtistryValue = 0,
                            AthleticsId = 22,
                            AthleticsValue = 4,
                            AttentionId = 1,
                            AttentionValue = 6,
                            CamouflageId = 43,
                            CamouflageValue = 0,
                            CharismaId = 38,
                            CharismaValue = 0,
                            CityOrientationId = 6,
                            CityOrientationValue = 0,
                            CorruptionId = 47,
                            CorruptionValue = 0,
                            CourageId = 52,
                            CourageValue = 7,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7336),
                            CrossbowMasteryId = 25,
                            CrossbowMasteryValue = 4,
                            DeceptionId = 34,
                            DeceptionValue = 0,
                            DeductionId = 3,
                            DeductionValue = 0,
                            EducationId = 5,
                            EducationValue = 0,
                            Enabled = true,
                            EnduranceId = 28,
                            EnduranceValue = 5,
                            EtiquetteId = 10,
                            EtiquetteValue = 0,
                            EvasionId = 21,
                            EvasionValue = 4,
                            FirstAidId = 44,
                            FirstAidValue = 0,
                            ForgeryId = 45,
                            ForgeryValue = 0,
                            GamblingId = 29,
                            GamblingValue = 0,
                            IntimidationId = 46,
                            IntimidationValue = 0,
                            KnowledgeTransferId = 7,
                            KnowledgeTransferValue = 0,
                            LanguageDwarfId = 13,
                            LanguageDwarfValue = 0,
                            LanguageGeneralId = 11,
                            LanguageGeneralValue = 0,
                            LanguageHighId = 12,
                            LanguageHighValue = 0,
                            LeadershipId = 33,
                            LeadershipValue = 0,
                            LightBladeMasteryId = 18,
                            LightBladeMasteryValue = 5,
                            LockpickingId = 40,
                            LockpickingValue = 0,
                            MagicResistanceId = 49,
                            MagicResistanceValue = 4,
                            ManualDexterityId = 23,
                            ManualDexterityValue = 0,
                            ManufacturingId = 42,
                            ManufacturingValue = 0,
                            MeleeCombatId = 14,
                            MeleeCombatValue = 0,
                            MonsterologyId = 4,
                            MonsterologyValue = 0,
                            PersuasionId = 37,
                            PersuasionResistanceId = 50,
                            PersuasionResistanceValue = 5,
                            PersuasionValue = 0,
                            PoleWeaponMasteryId = 17,
                            PoleWeaponMasteryValue = 0,
                            PublicSpeakingId = 31,
                            PublicSpeakingValue = 0,
                            RidingId = 16,
                            RidingValue = 0,
                            RitualsId = 48,
                            RitualsValue = 0,
                            SeamanshipId = 20,
                            SeamanshipValue = 0,
                            SeductionId = 36,
                            SeductionValue = 0,
                            SpellcastingId = 51,
                            SpellcastingValue = 0,
                            StealthId = 24,
                            StealthValue = 3,
                            StrengthId = 27,
                            StrengthValue = 0,
                            SurvivalId = 2,
                            SurvivalValue = 5,
                            SwordsmanshipId = 19,
                            SwordsmanshipValue = 6,
                            TacticsId = 8,
                            TacticsValue = 0,
                            TradingId = 9,
                            TradingValue = 0,
                            TrapKnowledgeId = 41,
                            TrapKnowledgeValue = 0,
                            UnderstandingPeopleId = 35,
                            UnderstandingPeopleValue = 0,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7336),
                            WrestlingId = 15,
                            WrestlingValue = 6
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.SkillsTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("FirstLeftSkillId")
                        .HasColumnType("int");

                    b.Property<int>("FirstLeftSkillValue")
                        .HasColumnType("int");

                    b.Property<int>("FirstMiddleSkillId")
                        .HasColumnType("int");

                    b.Property<int>("FirstMiddleSkillValue")
                        .HasColumnType("int");

                    b.Property<int>("FirstRightSkillId")
                        .HasColumnType("int");

                    b.Property<int>("FirstRightSkillValue")
                        .HasColumnType("int");

                    b.Property<int>("MainSkillId")
                        .HasColumnType("int");

                    b.Property<int>("MainSkillValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecondLeftSkillId")
                        .HasColumnType("int");

                    b.Property<int>("SecondLeftSkillValue")
                        .HasColumnType("int");

                    b.Property<int>("SecondMiddleSkillId")
                        .HasColumnType("int");

                    b.Property<int>("SecondMiddleSkillValue")
                        .HasColumnType("int");

                    b.Property<int>("SecondRightSkillId")
                        .HasColumnType("int");

                    b.Property<int>("SecondRightSkillValue")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("ThirdLeftSkillId")
                        .HasColumnType("int");

                    b.Property<int>("ThirdLeftSkillValue")
                        .HasColumnType("int");

                    b.Property<int>("ThirdMiddleSkillId")
                        .HasColumnType("int");

                    b.Property<int>("ThirdMiddleSkillValue")
                        .HasColumnType("int");

                    b.Property<int>("ThirdRightSkillId")
                        .HasColumnType("int");

                    b.Property<int>("ThirdRightSkillValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("SkillsTree");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7238),
                            Description = "",
                            Enabled = true,
                            FirstLeftSkillId = 54,
                            FirstLeftSkillValue = 0,
                            FirstMiddleSkillId = 57,
                            FirstMiddleSkillValue = 0,
                            FirstRightSkillId = 60,
                            FirstRightSkillValue = 0,
                            MainSkillId = 53,
                            MainSkillValue = 0,
                            Name = "",
                            SecondLeftSkillId = 55,
                            SecondLeftSkillValue = 0,
                            SecondMiddleSkillId = 58,
                            SecondMiddleSkillValue = 0,
                            SecondRightSkillId = 61,
                            SecondRightSkillValue = 0,
                            ThirdLeftSkillId = 56,
                            ThirdLeftSkillValue = 0,
                            ThirdMiddleSkillId = 59,
                            ThirdMiddleSkillValue = 0,
                            ThirdRightSkillId = 62,
                            ThirdRightSkillValue = 0,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7238)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Stats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6391),
                            Description = "",
                            Enabled = true,
                            Name = "Интеллект",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6391)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6393),
                            Description = "",
                            Enabled = true,
                            Name = "Реакция",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6393)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6394),
                            Description = "",
                            Enabled = true,
                            Name = "Ловкость",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6395)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6395),
                            Description = "",
                            Enabled = true,
                            Name = "Телосложение",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6396)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6396),
                            Description = "",
                            Enabled = true,
                            Name = "Скорость",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6397)
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6398),
                            Description = "",
                            Enabled = true,
                            Name = "Эмпатия",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6398)
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6399),
                            Description = "",
                            Enabled = true,
                            Name = "Ремесло",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6399)
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6400),
                            Description = "",
                            Enabled = true,
                            Name = "Воля",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6400)
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6401),
                            Description = "",
                            Enabled = true,
                            Name = "Удача",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6401)
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6402),
                            Description = "",
                            Enabled = true,
                            Name = "Энергия",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6402)
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6403),
                            Description = "",
                            Enabled = true,
                            Name = "Устойчивость",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6404)
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6404),
                            Description = "",
                            Enabled = true,
                            Name = "Бег",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6405)
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6406),
                            Description = "",
                            Enabled = true,
                            Name = "Прыжок",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6406)
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6407),
                            Description = "",
                            Enabled = true,
                            Name = "Пункты Здоровья",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6407)
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6408),
                            Description = "",
                            Enabled = true,
                            Name = "Выносливость",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6408)
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6409),
                            Description = "",
                            Enabled = true,
                            Name = "Переносимый вес",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6409)
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6410),
                            Description = "",
                            Enabled = true,
                            Name = "Отдых",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6410)
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6411),
                            Description = "",
                            Enabled = true,
                            Name = "Удар рукой",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6411)
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6413),
                            Description = "",
                            Enabled = true,
                            Name = "Удар ногой",
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6413)
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.StatsList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("ConstitutionValue")
                        .HasColumnType("int");

                    b.Property<int>("CraftsmanshipId")
                        .HasColumnType("int");

                    b.Property<int>("CraftsmanshipValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DexterityId")
                        .HasColumnType("int");

                    b.Property<int>("DexterityValue")
                        .HasColumnType("int");

                    b.Property<int>("EmpathyId")
                        .HasColumnType("int");

                    b.Property<int>("EmpathyValue")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("EnduranceId")
                        .HasColumnType("int");

                    b.Property<int>("EnduranceValue")
                        .HasColumnType("int");

                    b.Property<int>("EnergyId")
                        .HasColumnType("int");

                    b.Property<int>("EnergyValue")
                        .HasColumnType("int");

                    b.Property<int>("HandStrikeId")
                        .HasColumnType("int");

                    b.Property<int>("HandStrikeValue")
                        .HasColumnType("int");

                    b.Property<int>("HealthPointsId")
                        .HasColumnType("int");

                    b.Property<int>("HealthPointsValue")
                        .HasColumnType("int");

                    b.Property<int>("IntellectId")
                        .HasColumnType("int");

                    b.Property<int>("IntellectValue")
                        .HasColumnType("int");

                    b.Property<int>("JumpingId")
                        .HasColumnType("int");

                    b.Property<int>("JumpingValue")
                        .HasColumnType("int");

                    b.Property<int>("KickId")
                        .HasColumnType("int");

                    b.Property<int>("KickValue")
                        .HasColumnType("int");

                    b.Property<int>("LuckId")
                        .HasColumnType("int");

                    b.Property<int>("LuckValue")
                        .HasColumnType("int");

                    b.Property<int>("ReactionId")
                        .HasColumnType("int");

                    b.Property<int>("ReactionValue")
                        .HasColumnType("int");

                    b.Property<int>("ResilienceId")
                        .HasColumnType("int");

                    b.Property<int>("ResilienceValue")
                        .HasColumnType("int");

                    b.Property<int>("RestId")
                        .HasColumnType("int");

                    b.Property<int>("RestValue")
                        .HasColumnType("int");

                    b.Property<int>("RunningId")
                        .HasColumnType("int");

                    b.Property<int>("RunningValue")
                        .HasColumnType("int");

                    b.Property<int>("SpeedId")
                        .HasColumnType("int");

                    b.Property<int>("SpeedValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeightId")
                        .HasColumnType("int");

                    b.Property<int>("WeightValue")
                        .HasColumnType("int");

                    b.Property<int>("WillpowerId")
                        .HasColumnType("int");

                    b.Property<int>("WillpowerValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StatsList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConstitutionId = 4,
                            ConstitutionValue = 5,
                            CraftsmanshipId = 7,
                            CraftsmanshipValue = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7303),
                            DexterityId = 3,
                            DexterityValue = 5,
                            EmpathyId = 6,
                            EmpathyValue = 3,
                            Enabled = true,
                            EnduranceId = 15,
                            EnduranceValue = 20,
                            EnergyId = 10,
                            EnergyValue = 0,
                            HandStrikeId = 18,
                            HandStrikeValue = 0,
                            HealthPointsId = 14,
                            HealthPointsValue = 20,
                            IntellectId = 1,
                            IntellectValue = 3,
                            JumpingId = 13,
                            JumpingValue = 2,
                            KickId = 19,
                            KickValue = 2,
                            LuckId = 9,
                            LuckValue = 0,
                            ReactionId = 2,
                            ReactionValue = 6,
                            ResilienceId = 11,
                            ResilienceValue = 4,
                            RestId = 17,
                            RestValue = 4,
                            RunningId = 12,
                            RunningValue = 12,
                            SpeedId = 5,
                            SpeedValue = 4,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7304),
                            WeightId = 16,
                            WeightValue = 50,
                            WillpowerId = 8,
                            WillpowerValue = 4
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Headline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Headlines");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.BlueprintComponentList", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BlueprintId")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("ComponentId");

                    b.ToTable("BlueprintComponentList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2,
                            BlueprintId = 86,
                            ComponentId = 9
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1,
                            BlueprintId = 86,
                            ComponentId = 22
                        },
                        new
                        {
                            Id = 3,
                            Amount = 6,
                            BlueprintId = 86,
                            ComponentId = 13
                        },
                        new
                        {
                            Id = 4,
                            Amount = 3,
                            BlueprintId = 86,
                            ComponentId = 15
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.FormulaSubstanceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("FormulaId")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormulaId");

                    b.ToTable("FormulaComponentList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            FormulaId = 87,
                            SubstanceType = 3
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1,
                            FormulaId = 87,
                            SubstanceType = 4
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailabilityType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("ItemBases");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.ItemBaseEffectList", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("ChancePercent")
                        .HasColumnType("int");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EffectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDealDamage")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemBaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EffectId");

                    b.HasIndex("ItemBaseId");

                    b.ToTable("ItemBaseEffectList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChancePercent = 75,
                            Damage = "",
                            EffectId = 2,
                            IsDealDamage = false,
                            ItemBaseId = 2
                        },
                        new
                        {
                            Id = 2,
                            ChancePercent = 0,
                            Damage = "2к6+2",
                            EffectId = 2,
                            IsDealDamage = true,
                            ItemBaseId = 1
                        },
                        new
                        {
                            Id = 3,
                            ChancePercent = 0,
                            Damage = "",
                            EffectId = 1,
                            IsDealDamage = false,
                            ItemBaseId = 54
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.ServiceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("LogMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServiceLogs");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Spells.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CheckDC")
                        .HasColumnType("int");

                    b.Property<int>("ConcetrationEnduranceCost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatureId")
                        .HasColumnType("int");

                    b.Property<string>("DangerInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("EnduranceCost")
                        .HasColumnType("int");

                    b.Property<bool>("IsConcetration")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDruidSpell")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPriestSpell")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreparationTime")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("SourceType")
                        .HasColumnType("int");

                    b.Property<string>("SourceTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpellLevel")
                        .HasColumnType("int");

                    b.Property<int>("SpellType")
                        .HasColumnType("int");

                    b.Property<string>("SpellTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithdrawalCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatureId");

                    b.HasIndex("SourceId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Spells.SpellComponentList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("SpellId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellComponentList");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Spells.SpellSkillProtectionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<int?>("SpellId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("SpellId");

                    b.ToTable("SpellSkillProtectionList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SkillId = 14
                        },
                        new
                        {
                            Id = 2,
                            SkillId = 17
                        },
                        new
                        {
                            Id = 3,
                            SkillId = 18
                        },
                        new
                        {
                            Id = 4,
                            SkillId = 19
                        },
                        new
                        {
                            Id = 5,
                            SkillId = 21
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Users.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Users.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRemember")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.AlchemicalItem", b =>
                {
                    b.HasBaseType("TTRPG_Project.DAL.Entities.Database.Items.ItemBase");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.ToTable("AlchemicalItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailabilityType = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6640),
                            Description = "Прикладывание к ране обезболивающих трав притупляет боль, снижая штраф от критических ранений и состояния «при смерти» на 2. Эффект действует 2d10 раундов.",
                            Enabled = true,
                            Name = "Обезболивающие травы",
                            Price = 12,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6641),
                            Weight = 0.10000000000000001,
                            ItemType = 0
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Armor", b =>
                {
                    b.HasBaseType("TTRPG_Project.DAL.Entities.Database.Items.ItemBase");

                    b.Property<int>("AmountOfEnhancements")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentType")
                        .HasColumnType("int");

                    b.Property<int>("ItemOriginType")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Reliability")
                        .HasColumnType("int");

                    b.Property<int>("Stiffness")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable("Armors");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6658),
                            Description = "Вердонские лучники — крепкие ребята. Обычно они не слишком усердствуют с бронёй — дриады-то всёравно в щели между доспехами дротик-другой засадят. Зато они носят хорошие плотные капюшоны, расшитые сине-чёрным стрельчатым узором.",
                            Enabled = true,
                            Name = "Капюшон вердэнского лучника",
                            Price = 100,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6658),
                            Weight = 0.5,
                            AmountOfEnhancements = 1,
                            EquipmentType = 1,
                            ItemOriginType = 1,
                            ItemType = 0,
                            Reliability = 3,
                            Stiffness = 0,
                            Type = 1
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Blueprint", b =>
                {
                    b.HasBaseType("TTRPG_Project.DAL.Entities.Database.Items.ItemBase");

                    b.Property<int>("AdditionalPayment")
                        .HasColumnType("int");

                    b.Property<int>("Complexity")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<float>("TimeSpend")
                        .HasColumnType("real");

                    b.ToTable("Blueprints");

                    b.HasData(
                        new
                        {
                            Id = 86,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7064),
                            Description = "",
                            Enabled = true,
                            Name = "Чертеж «Капюшон вердэнского лучника»",
                            Price = 150,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7064),
                            Weight = 0.0,
                            AdditionalPayment = 70,
                            Complexity = 10,
                            ItemType = 0,
                            TimeSpend = 3f
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Component", b =>
                {
                    b.HasBaseType("TTRPG_Project.DAL.Entities.Database.Items.ItemBase");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Complexity")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlchemical")
                        .HasColumnType("bit");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceType")
                        .HasColumnType("int");

                    b.Property<string>("WhereToFind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Components");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AvailabilityType = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6704),
                            Description = "",
                            Enabled = true,
                            Name = "Пепел",
                            Price = 1,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6705),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 10,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Костер и Сгоревшие предметы"
                        },
                        new
                        {
                            Id = 4,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6713),
                            Description = "",
                            Enabled = true,
                            Name = "Уголь",
                            Price = 1,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6714),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 14,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Костер, Горы или Под землей"
                        },
                        new
                        {
                            Id = 5,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6718),
                            Description = "",
                            Enabled = true,
                            Name = "Хлопок",
                            Price = 1,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6718),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Поля и Плантации"
                        },
                        new
                        {
                            Id = 6,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6722),
                            Description = "",
                            Enabled = true,
                            Name = "Двойное полотно",
                            Price = 22,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6722),
                            Weight = 0.10000000000000001,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 7,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6725),
                            Description = "",
                            Enabled = true,
                            Name = "Стекло",
                            Price = 5,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6725),
                            Weight = 0.5,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается"
                        },
                        new
                        {
                            Id = 8,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6727),
                            Description = "",
                            Enabled = true,
                            Name = "Укрепленное дерево",
                            Price = 16,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6727),
                            Weight = 0.10000000000000001,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 9,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6730),
                            Description = "",
                            Enabled = true,
                            Name = "Полотно",
                            Price = 9,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6730),
                            Weight = 0.10000000000000001,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается или Изготавливается"
                        },
                        new
                        {
                            Id = 10,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6732),
                            Description = "",
                            Enabled = true,
                            Name = "Масло",
                            Price = 3,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6732),
                            Weight = 0.10000000000000001,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 11,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6735),
                            Description = "",
                            Enabled = true,
                            Name = "Смлоа",
                            Price = 2,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6735),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 10,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Леса"
                        },
                        new
                        {
                            Id = 12,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6737),
                            Description = "",
                            Enabled = true,
                            Name = "Шелк",
                            Price = 50,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6737),
                            Weight = 0.10000000000000001,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается"
                        },
                        new
                        {
                            Id = 13,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6739),
                            Description = "",
                            Enabled = true,
                            Name = "Нитки",
                            Price = 3,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6739),
                            Weight = 0.10000000000000001,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается или Изготавливается"
                        },
                        new
                        {
                            Id = 14,
                            AvailabilityType = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6741),
                            Description = "",
                            Enabled = true,
                            Name = "Древесина",
                            Price = 3,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6741),
                            Weight = 1.0,
                            Amount = "2к6",
                            Complexity = 8,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Леса"
                        },
                        new
                        {
                            Id = 15,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6744),
                            Description = "",
                            Enabled = true,
                            Name = "Воск",
                            Price = 2,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6744),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 12,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Леса и Поля"
                        },
                        new
                        {
                            Id = 16,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6746),
                            Description = "",
                            Enabled = true,
                            Name = "Кости животных",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6746),
                            Weight = 4.0,
                            Amount = "Варьируется",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Чудовища и Животные"
                        },
                        new
                        {
                            Id = 17,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6748),
                            Description = "",
                            Enabled = true,
                            Name = "Коровья шкура",
                            Price = 10,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6749),
                            Weight = 5.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается"
                        },
                        new
                        {
                            Id = 18,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6750),
                            Description = "",
                            Enabled = true,
                            Name = "Кожа драконида",
                            Price = 58,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6751),
                            Weight = 5.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 19,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6753),
                            Description = "",
                            Enabled = true,
                            Name = "Чешуя драконида",
                            Price = 30,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6753),
                            Weight = 5.0,
                            Amount = "1к6",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Виверны"
                        },
                        new
                        {
                            Id = 20,
                            AvailabilityType = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6755),
                            Description = "",
                            Enabled = true,
                            Name = "Перья",
                            Price = 4,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6755),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Птицы"
                        },
                        new
                        {
                            Id = 21,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6757),
                            Description = "",
                            Enabled = true,
                            Name = "Укрепленная кожа",
                            Price = 48,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6757),
                            Weight = 3.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 22,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6759),
                            Description = "",
                            Enabled = true,
                            Name = "Кожа",
                            Price = 28,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6759),
                            Weight = 2.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается или Изготавливается"
                        },
                        new
                        {
                            Id = 23,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6761),
                            Description = "",
                            Enabled = true,
                            Name = "Лирийская кожа",
                            Price = 60,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6761),
                            Weight = 2.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 24,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6765),
                            Description = "",
                            Enabled = true,
                            Name = "Волчья шкура",
                            Price = 14,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6765),
                            Weight = 3.0,
                            Amount = "3",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Волки"
                        },
                        new
                        {
                            Id = 25,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6767),
                            Description = "",
                            Enabled = true,
                            Name = "Чернящее масло",
                            Price = 24,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6767),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 16,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Леса"
                        },
                        new
                        {
                            Id = 26,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6769),
                            Description = "",
                            Enabled = true,
                            Name = "Масло из дрейка",
                            Price = 45,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6769),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 16,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Реки и Побережье"
                        },
                        new
                        {
                            Id = 27,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6773),
                            Description = "",
                            Enabled = true,
                            Name = "Эфирная смазка",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6773),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 14,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Леса и Поля"
                        },
                        new
                        {
                            Id = 28,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6783),
                            Description = "",
                            Enabled = true,
                            Name = "Травильная кислота",
                            Price = 2,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6783),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 14,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Пещеры и Горы"
                        },
                        new
                        {
                            Id = 29,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6785),
                            Description = "",
                            Enabled = true,
                            Name = "Пятая эссенция",
                            Price = 82,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6785),
                            Weight = 0.10000000000000001,
                            Amount = "Варьируется",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Места силы, Маги и Бесы"
                        },
                        new
                        {
                            Id = 30,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6789),
                            Description = "",
                            Enabled = true,
                            Name = "Огров воск",
                            Price = 10,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6789),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 14,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Пещеры"
                        },
                        new
                        {
                            Id = 31,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6791),
                            Description = "",
                            Enabled = true,
                            Name = "Точильный порошок",
                            Price = 32,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6791),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 16,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Горы и Пещеры"
                        },
                        new
                        {
                            Id = 32,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6793),
                            Description = "",
                            Enabled = true,
                            Name = "Дубильные травы",
                            Price = 3,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6794),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 14,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Поля и Леса"
                        },
                        new
                        {
                            Id = 33,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6796),
                            Description = "",
                            Enabled = true,
                            Name = "Темное железо",
                            Price = 52,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6796),
                            Weight = 1.5,
                            Amount = "1к6",
                            Complexity = 18,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 34,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6799),
                            Description = "",
                            Enabled = true,
                            Name = "Темная сталь",
                            Price = 82,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6799),
                            Weight = 1.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 35,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6807),
                            Description = "",
                            Enabled = true,
                            Name = "Двимерит",
                            Price = 240,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6808),
                            Weight = 1.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 36,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6810),
                            Description = "",
                            Enabled = true,
                            Name = "Самоцветы",
                            Price = 100,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6810),
                            Weight = 0.10000000000000001,
                            Amount = "1к6/2",
                            Complexity = 24,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 37,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6813),
                            Description = "",
                            Enabled = true,
                            Name = "Совершенный самоцвет",
                            Price = 1000,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6813),
                            Weight = 0.10000000000000001,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 38,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6815),
                            Description = "",
                            Enabled = true,
                            Name = "Светящаяся руда",
                            Price = 80,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6815),
                            Weight = 1.0,
                            Amount = "1к6/2",
                            Complexity = 20,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 39,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6818),
                            Description = "",
                            Enabled = true,
                            Name = "Золото",
                            Price = 85,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6818),
                            Weight = 1.0,
                            Amount = "1к6/2",
                            Complexity = 18,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 40,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6820),
                            Description = "",
                            Enabled = true,
                            Name = "Железо",
                            Price = 30,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6820),
                            Weight = 1.5,
                            Amount = "1к6",
                            Complexity = 16,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 41,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6822),
                            Description = "",
                            Enabled = true,
                            Name = "Махакамский двимерит",
                            Price = 300,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6823),
                            Weight = 1.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 42,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6825),
                            Description = "",
                            Enabled = true,
                            Name = "Махакамская сталь",
                            Price = 114,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6825),
                            Weight = 1.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 43,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6828),
                            Description = "",
                            Enabled = true,
                            Name = "Метеорит",
                            Price = 98,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6828),
                            Weight = 1.0,
                            Amount = "1к6/2",
                            Complexity = 24,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Где угодно на поверхности земли"
                        },
                        new
                        {
                            Id = 44,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6830),
                            Description = "",
                            Enabled = true,
                            Name = "Речная глина",
                            Price = 5,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6830),
                            Weight = 1.5,
                            Amount = "1к6",
                            Complexity = 14,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Реки и Берега реки"
                        },
                        new
                        {
                            Id = 45,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6832),
                            Description = "",
                            Enabled = true,
                            Name = "Серебро",
                            Price = 72,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6832),
                            Weight = 1.0,
                            Amount = "1к6/2",
                            Complexity = 16,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 46,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6834),
                            Description = "",
                            Enabled = true,
                            Name = "Сталь",
                            Price = 48,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6835),
                            Weight = 1.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 47,
                            AvailabilityType = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6837),
                            Description = "",
                            Enabled = true,
                            Name = "Камень",
                            Price = 4,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6837),
                            Weight = 2.0,
                            Amount = "2к6",
                            Complexity = 8,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Где угодно"
                        },
                        new
                        {
                            Id = 48,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6839),
                            Description = "",
                            Enabled = true,
                            Name = "Третогорская сталь",
                            Price = 64,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6839),
                            Weight = 1.0,
                            Amount = "",
                            Complexity = 0,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Покупается и Изготавливается"
                        },
                        new
                        {
                            Id = 49,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6841),
                            Description = "",
                            Enabled = true,
                            Name = "Зерриканская смесь",
                            Price = 30,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6841),
                            Weight = 0.10000000000000001,
                            Amount = "1к6/2",
                            Complexity = 18,
                            IsAlchemical = false,
                            ItemType = 0,
                            SubstanceType = 0,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 50,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6845),
                            Description = "",
                            Enabled = true,
                            Name = "Зеленая плесень",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6845),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 1,
                            WhereToFind = "Пещеры"
                        },
                        new
                        {
                            Id = 51,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6847),
                            Description = "",
                            Enabled = true,
                            Name = "Переступень",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6847),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 1,
                            WhereToFind = "Горы и Города"
                        },
                        new
                        {
                            Id = 52,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6850),
                            Description = "",
                            Enabled = true,
                            Name = "Помет беса",
                            Price = 20,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6850),
                            Weight = 1.0,
                            Amount = "1к6/2",
                            Complexity = 20,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 1,
                            WhereToFind = "Территория бесов или Бесы"
                        },
                        new
                        {
                            Id = 53,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6853),
                            Description = "",
                            Enabled = true,
                            Name = "Омела",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6853),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 2,
                            WhereToFind = "Поля и Леса"
                        },
                        new
                        {
                            Id = 54,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6856),
                            Description = "",
                            Enabled = true,
                            Name = "Паутинник",
                            Price = 18,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6856),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 2,
                            WhereToFind = "Леса"
                        },
                        new
                        {
                            Id = 55,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6858),
                            Description = "",
                            Enabled = true,
                            Name = "Optima mater",
                            Price = 100,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6858),
                            Weight = 0.10000000000000001,
                            Amount = "1к6/2",
                            Complexity = 18,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 3,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 56,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6860),
                            Description = "",
                            Enabled = true,
                            Name = "Жимолость",
                            Price = 21,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6860),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 3,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 57,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6862),
                            Description = "",
                            Enabled = true,
                            Name = "Листья балиссы",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6863),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 3,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 58,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6865),
                            Description = "",
                            Enabled = true,
                            Name = "Сера",
                            Price = 14,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6865),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 3,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 59,
                            AvailabilityType = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6867),
                            Description = "",
                            Enabled = true,
                            Name = "Собачья петрушка",
                            Price = 2,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6868),
                            Weight = 0.10000000000000001,
                            Amount = "2к6",
                            Complexity = 10,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 3,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 60,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6869),
                            Description = "",
                            Enabled = true,
                            Name = "Царская водка",
                            Price = 20,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6870),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 3,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 61,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6872),
                            Description = "",
                            Enabled = true,
                            Name = "Аконит",
                            Price = 9,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6872),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 4,
                            WhereToFind = "Поля, Леса и Горы"
                        },
                        new
                        {
                            Id = 62,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6876),
                            Description = "",
                            Enabled = true,
                            Name = "Корень лопуха",
                            Price = 32,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6876),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 16,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 4,
                            WhereToFind = "Леса и Поля"
                        },
                        new
                        {
                            Id = 63,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6878),
                            Description = "",
                            Enabled = true,
                            Name = "Корень мандрагоры",
                            Price = 65,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6879),
                            Weight = 0.10000000000000001,
                            Amount = "1к6/2",
                            Complexity = 18,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 4,
                            WhereToFind = "Леса и Поля"
                        },
                        new
                        {
                            Id = 64,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6881),
                            Description = "",
                            Enabled = true,
                            Name = "Фосфор",
                            Price = 20,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6881),
                            Weight = 0.5,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 4,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 65,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6883),
                            Description = "",
                            Enabled = true,
                            Name = "Calcium equum",
                            Price = 12,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6883),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 5,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 66,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6885),
                            Description = "",
                            Enabled = true,
                            Name = "Вороний глаз",
                            Price = 17,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6886),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 5,
                            WhereToFind = "Леса и Поля"
                        },
                        new
                        {
                            Id = 67,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6888),
                            Description = "",
                            Enabled = true,
                            Name = "Грибы-шибальцы",
                            Price = 17,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6888),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 5,
                            WhereToFind = "Горы"
                        },
                        new
                        {
                            Id = 68,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6896),
                            Description = "",
                            Enabled = true,
                            Name = "Лепестки белого мирта",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6896),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 5,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 69,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6898),
                            Description = "",
                            Enabled = true,
                            Name = "Плод балиссы",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6898),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 5,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 70,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6900),
                            Description = "",
                            Enabled = true,
                            Name = "Ячмень",
                            Price = 9,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6900),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 5,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 71,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6903),
                            Description = "",
                            Enabled = true,
                            Name = "Винный камень",
                            Price = 88,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6903),
                            Weight = 0.5,
                            Amount = "1к6/2",
                            Complexity = 18,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 6,
                            WhereToFind = "Винокурни"
                        },
                        new
                        {
                            Id = 72,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6905),
                            Description = "",
                            Enabled = true,
                            Name = "Волокна хана",
                            Price = 17,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6905),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 6,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 73,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6907),
                            Description = "",
                            Enabled = true,
                            Name = "Ласточкина трава",
                            Price = 8,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6907),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 6,
                            WhereToFind = "Леса и Поля"
                        },
                        new
                        {
                            Id = 74,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6909),
                            Description = "",
                            Enabled = true,
                            Name = "Лунная крошка",
                            Price = 91,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6910),
                            Weight = 0.10000000000000001,
                            Amount = "1к6/2",
                            Complexity = 18,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 6,
                            WhereToFind = "Чудовища и Под землей"
                        },
                        new
                        {
                            Id = 75,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6912),
                            Description = "",
                            Enabled = true,
                            Name = "Вербена",
                            Price = 18,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6912),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 7,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 76,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6914),
                            Description = "",
                            Enabled = true,
                            Name = "Листья волчьего алоэ",
                            Price = 39,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6914),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 7,
                            WhereToFind = "Синие горы"
                        },
                        new
                        {
                            Id = 77,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6916),
                            Description = "",
                            Enabled = true,
                            Name = "Краснолюдский бессмертник",
                            Price = 75,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6917),
                            Weight = 0.10000000000000001,
                            Amount = "1к6/2",
                            Complexity = 18,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 8,
                            WhereToFind = "Под землей"
                        },
                        new
                        {
                            Id = 78,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6918),
                            Description = "",
                            Enabled = true,
                            Name = "Эмбрион эндриаги",
                            Price = 55,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6919),
                            Weight = 1.5,
                            Amount = "1к6",
                            Complexity = 0,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 8,
                            WhereToFind = "Гнезда эндриаг"
                        },
                        new
                        {
                            Id = 79,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6922),
                            Description = "",
                            Enabled = true,
                            Name = "Жемчуг",
                            Price = 100,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6922),
                            Weight = 0.10000000000000001,
                            Amount = "1к6/3",
                            Complexity = 20,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 9,
                            WhereToFind = "Дно океана и Побережье"
                        },
                        new
                        {
                            Id = 80,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(6924),
                            Description = "",
                            Enabled = true,
                            Name = "Корень зарника",
                            Price = 18,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7013),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 9,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 81,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7016),
                            Description = "",
                            Enabled = true,
                            Name = "Лепестки гинации",
                            Price = 17,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7016),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 9,
                            WhereToFind = "Поля"
                        },
                        new
                        {
                            Id = 82,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7018),
                            Description = "",
                            Enabled = true,
                            Name = "Лепестки морозника",
                            Price = 19,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7018),
                            Weight = 0.10000000000000001,
                            Amount = "1к6",
                            Complexity = 15,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 9,
                            WhereToFind = "Леса"
                        },
                        new
                        {
                            Id = 83,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7020),
                            Description = "",
                            Enabled = true,
                            Name = "Плод берберки",
                            Price = 9,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7020),
                            Weight = 0.10000000000000001,
                            Amount = "1к10",
                            Complexity = 12,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 9,
                            WhereToFind = "Горы и Болота"
                        },
                        new
                        {
                            Id = 84,
                            AvailabilityType = 4,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7023),
                            Description = "",
                            Enabled = true,
                            Name = "Ртутный раствор",
                            Price = 77,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7023),
                            Weight = 0.10000000000000001,
                            Amount = "1к6/2",
                            Complexity = 18,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 9,
                            WhereToFind = "Горы и Под землей"
                        },
                        new
                        {
                            Id = 85,
                            AvailabilityType = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7025),
                            Description = "",
                            Enabled = true,
                            Name = "Склеродерм",
                            Price = 5,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7026),
                            Weight = 0.10000000000000001,
                            Amount = "2к6",
                            Complexity = 10,
                            IsAlchemical = true,
                            ItemType = 0,
                            SubstanceType = 9,
                            WhereToFind = "Леса и Пещеры"
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Formula", b =>
                {
                    b.HasBaseType("TTRPG_Project.DAL.Entities.Database.Items.ItemBase");

                    b.Property<int>("AdditionalPayment")
                        .HasColumnType("int");

                    b.Property<int>("Complexity")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<float>("TimeSpend")
                        .HasColumnType("real");

                    b.ToTable("Formulas");

                    b.HasData(
                        new
                        {
                            Id = 87,
                            AvailabilityType = 1,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7097),
                            Description = "",
                            Enabled = true,
                            Name = "Формула «Обезболивающие травы»",
                            Price = 0,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7098),
                            Weight = 1.0,
                            AdditionalPayment = 1,
                            Complexity = 1,
                            ItemType = 0,
                            TimeSpend = 0f
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Item", b =>
                {
                    b.HasBaseType("TTRPG_Project.DAL.Entities.Database.Items.ItemBase");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("StealthType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 88,
                            AvailabilityType = 0,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7130),
                            Description = "Всегда с собой таскай верёвку. Я не раз в ямы проваливался, да и на скалы карабкаться приходилось. Ситуаций, где нужна верёвка, предостаточно",
                            Enabled = true,
                            Name = "Веревка (20 метров)",
                            Price = 20,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7130),
                            Weight = 1.5,
                            ItemType = 0,
                            StealthType = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = 91,
                            AvailabilityType = 0,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7131),
                            Description = "Валюта это",
                            Enabled = true,
                            Name = "Кроны",
                            Price = 1,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7132),
                            Weight = 0.01,
                            ItemType = 0,
                            StealthType = 0,
                            Type = 0
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Tool", b =>
                {
                    b.HasBaseType("TTRPG_Project.DAL.Entities.Database.Items.ItemBase");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("StealthType")
                        .HasColumnType("int");

                    b.ToTable("Tools");

                    b.HasData(
                        new
                        {
                            Id = 89,
                            AvailabilityType = 3,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7143),
                            Description = "Позволяют создавать алхимические составы",
                            Enabled = true,
                            Name = "Инструменты алхимика",
                            Price = 80,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7143),
                            Weight = 3.0,
                            ItemType = 0,
                            StealthType = 4
                        });
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Weapon", b =>
                {
                    b.HasBaseType("TTRPG_Project.DAL.Entities.Database.Items.ItemBase");

                    b.Property<int>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int>("AmountOfEnhancements")
                        .HasColumnType("int");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentType")
                        .HasColumnType("int");

                    b.Property<int>("Grip")
                        .HasColumnType("int");

                    b.Property<bool>("IsAmmunition")
                        .HasColumnType("bit");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("Reliability")
                        .HasColumnType("int");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("StealthType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasIndex("SkillId");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 90,
                            AvailabilityType = 2,
                            CreateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7157),
                            Description = "",
                            Enabled = true,
                            Name = "Стилет",
                            Price = 275,
                            SourceId = 1,
                            UpdateDate = new DateTime(2024, 4, 3, 15, 25, 51, 69, DateTimeKind.Local).AddTicks(7158),
                            Weight = 0.5,
                            Accuracy = 1,
                            AmountOfEnhancements = 1,
                            Damage = "1к6",
                            Distance = 0,
                            EquipmentType = 0,
                            Grip = 1,
                            IsAmmunition = false,
                            ItemType = 0,
                            Reliability = 5,
                            StealthType = 2,
                            Type = 4
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Additional.Effect", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Additional.ServicePrice", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Ability", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Race");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Attack", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.AttackEffectList", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Attack", "Attack")
                        .WithMany("AttackEffectList")
                        .HasForeignKey("AttackId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectId");

                    b.Navigation("Attack");

                    b.Navigation("Effect");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Class", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.SkillsTree", "SkillsTree")
                        .WithMany()
                        .HasForeignKey("SkillsTreeId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("SkillsTree");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Creature", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.SkillsList", "SkillsList")
                        .WithMany()
                        .HasForeignKey("SkillsListId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.StatsList", "StatsList")
                        .WithMany()
                        .HasForeignKey("StatsListId");

                    b.Navigation("Race");

                    b.Navigation("SkillsList");

                    b.Navigation("Source");

                    b.Navigation("StatsList");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.CreatureAbility", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Creature", "Creature")
                        .WithMany("CreatureAbilitys")
                        .HasForeignKey("CreatureId");

                    b.Navigation("Ability");

                    b.Navigation("Creature");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.CreatureAttack", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Attack", "Attack")
                        .WithMany()
                        .HasForeignKey("AttackId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Creature", "Creature")
                        .WithMany("CreatureAttacks")
                        .HasForeignKey("CreatureId");

                    b.Navigation("Attack");

                    b.Navigation("Creature");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.CreatureReward", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Creature", "Creature")
                        .WithMany("CreatureReward")
                        .HasForeignKey("CreatureId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithMany("CreatureReward")
                        .HasForeignKey("ItemBaseId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Reward", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardId");

                    b.Navigation("Creature");

                    b.Navigation("Reward");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Race", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Reward", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", "ItemBase")
                        .WithMany()
                        .HasForeignKey("ItemBaseId");

                    b.Navigation("ItemBase");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Skill", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Stat", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId");

                    b.Navigation("Source");

                    b.Navigation("Stat");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.SkillsTree", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Stat", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Headline", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.BlueprintComponentList", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.Blueprint", "Blueprint")
                        .WithMany("BlueprintComponentList")
                        .HasForeignKey("BlueprintId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.Component", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId");

                    b.Navigation("Blueprint");

                    b.Navigation("Component");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.FormulaSubstanceList", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.Formula", "Formula")
                        .WithMany("FormulaSubstanceList")
                        .HasForeignKey("FormulaId");

                    b.Navigation("Formula");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.ItemBaseEffectList", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", "ItemBase")
                        .WithMany("ItemBaseEffectList")
                        .HasForeignKey("ItemBaseId");

                    b.Navigation("Effect");

                    b.Navigation("ItemBase");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Spells.Spell", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Creature", null)
                        .WithMany("Spells")
                        .HasForeignKey("CreatureId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Additional.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Spells.SpellComponentList", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.Component", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Spells.Spell", "Spell")
                        .WithMany("SpellComponentList")
                        .HasForeignKey("SpellId");

                    b.Navigation("Component");

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Spells.SpellSkillProtectionList", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId");

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Spells.Spell", "Spell")
                        .WithMany("SpellSkillProtectionList")
                        .HasForeignKey("SpellId");

                    b.Navigation("Skill");

                    b.Navigation("Spell");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.AlchemicalItem", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithOne()
                        .HasForeignKey("TTRPG_Project.DAL.Entities.Database.Items.AlchemicalItem", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Armor", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithOne()
                        .HasForeignKey("TTRPG_Project.DAL.Entities.Database.Items.Armor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Blueprint", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithOne()
                        .HasForeignKey("TTRPG_Project.DAL.Entities.Database.Items.Blueprint", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Component", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithOne()
                        .HasForeignKey("TTRPG_Project.DAL.Entities.Database.Items.Component", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Formula", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithOne()
                        .HasForeignKey("TTRPG_Project.DAL.Entities.Database.Items.Formula", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Item", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithOne()
                        .HasForeignKey("TTRPG_Project.DAL.Entities.Database.Items.Item", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Tool", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithOne()
                        .HasForeignKey("TTRPG_Project.DAL.Entities.Database.Items.Tool", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Weapon", b =>
                {
                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", null)
                        .WithOne()
                        .HasForeignKey("TTRPG_Project.DAL.Entities.Database.Items.Weapon", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TTRPG_Project.DAL.Entities.Database.Creatures.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Attack", b =>
                {
                    b.Navigation("AttackEffectList");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Creatures.Creature", b =>
                {
                    b.Navigation("CreatureAbilitys");

                    b.Navigation("CreatureAttacks");

                    b.Navigation("CreatureReward");

                    b.Navigation("Spells");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.ItemBase", b =>
                {
                    b.Navigation("CreatureReward");

                    b.Navigation("ItemBaseEffectList");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Spells.Spell", b =>
                {
                    b.Navigation("SpellComponentList");

                    b.Navigation("SpellSkillProtectionList");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Blueprint", b =>
                {
                    b.Navigation("BlueprintComponentList");
                });

            modelBuilder.Entity("TTRPG_Project.DAL.Entities.Database.Items.Formula", b =>
                {
                    b.Navigation("FormulaSubstanceList");
                });
#pragma warning restore 612, 618
        }
    }
}
